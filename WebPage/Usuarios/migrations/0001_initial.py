# Generated by Django 4.2.3 on 2023-07-07 22:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('numero_identificacion', models.CharField(default='', max_length=18, unique=True, verbose_name='Documento de Identificación')),
                ('second_name', models.CharField(blank=True, default='', max_length=20, verbose_name='Segundo nombre')),
                ('second_last_name', models.CharField(blank=True, default='', max_length=20, verbose_name='Segundo Apellido')),
                ('email', models.EmailField(max_length=255, verbose_name='email address')),
                ('phone_no', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="El Número debe tener 10 digitos \n ó 12 en el formato '+593 xx xxx'", regex='^\\+?1?\\d{9,12}$')])),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile_pictures/')),
                ('is_working', models.BooleanField(default=True)),
                ('servicio', models.CharField(choices=[('Admin', 'Administrador'), ('CMS', 'Community Manager')], max_length=50)),
                ('fecha_de_nacimiento', models.DateField(blank=True, null=True)),
                ('genero', models.CharField(choices=[('MASCULINO', 'Masculino'), ('FEMENINO', 'Femenino'), ('NO_BINARIO', 'No Binario'), ('TRANSGENERO', 'Transgénero'), ('INTERSEX', 'Intersex'), ('NOT_SAY', 'Prefiero no Decirlo')], max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
